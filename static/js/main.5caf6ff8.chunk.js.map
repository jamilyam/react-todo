{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","services/gotService.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["AppHeader","done","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","React","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","key","onClick","GotServices","_apiBase","url","fetch","res","ok","Error","status","json","getResource","id","PostListItem","gotService","userId","title","completed","updateTask","Math","floor","random","getTask","then","task","onDelete","onToggleCompleted","classNames","PostList","posts","elements","item","itemProps","ListGroup","PostAddForm","text","onValuechange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","body","newItem","old","items","length","lable","indexOf","visiblePosts","filterPosts","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5caf6ff8.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\n\nconst AppHeader = ({done, allPosts}) => {\n  return (\n    <div className =\"app-header d-flex\">\n      <h1>Jamilya</h1>\n      <h2>{allPosts} записей, из них сделано {done}</h2>\n    </div>\n  )\n}\n\nexport default AppHeader;","import SearchPanel from './search-panel';\nexport default SearchPanel;","import React from 'react';\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: ''\n    }\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n  }\n  onUpdateSearch(e) {\n    const term = e.target.value;\n    this.setState({term});\n    this.props.onUpdateSearch(term);\n  }\n  render() {\n    return (\n      <input \n        className=\"form-control search-input\" \n        type=\"text\" \n        placeholder=\"Поиск по записям\"\n        onChange={this.onUpdateSearch}/>\n    )\n  }\n}\n\n","import PostStatusFilter from './post-status-filter';\nexport default PostStatusFilter;","import React from 'react';\n// import {Button} from 'reactstrap';\n\nexport default class PostStatusFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.buttons = [\n      {name: 'all', label: 'Все'},\n      {name: 'like', label: 'Отмеченные'}\n    ]\n  }\n  render() {\n    const buttons = this.buttons.map(({name, label}) => {\n      const {filter, onFilterSelect} = this.props;\n      const active = filter === name;\n      const clazz = active ? ' btn-info' : ' btn-outline-secondary';\n    return (\n      <button \n        key={name} \n        type='button' \n        className={`btn ${clazz}`}\n        onClick={() => onFilterSelect(name)}\n        >{label}</button>\n      )\n    });\n    return (\n    <div className=\"btn-group\">\n      {buttons}\n      {/* <Button color='info'>Все</Button>\n      <Button outline color='secondary'>Отмеченные</Button> */}\n    </div>\n    )\n  }\n}\n\n","import React from 'react';\n\n\nexport default class GotServices extends React.Component {\n  constructor() {\n    super();\n    this._apiBase = 'https://jsonplaceholder.typicode.com/todos';\n  }\n  async getResource(url) {\n    const res = await fetch(`${this._apiBase}${url}`);\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n    }\n    return await res.json();\n  };\n// fetch(url, {\n//   method: 'POST',\n//   body: JSON.stringify(data),\n//   headers: {\n//     'Content-Type':'application/json'\n//   }\n// })\n//   .then(response => response.json())\n//   .then(json => console.log(json))\n//   .catch(error => console.error('Error', error))\n\n  getAllTasks() {\n    return this.getResource('/?page=1&pageSize=5');\n  }\n  getTask(id) {\n    return this.getResource(`/${id}`);\n  }\n  \n}\n\n","import PostListItem from './post-list-item';\nexport default PostListItem;","import React from 'react';\nimport './post-list-item.css';\nimport gotService from '../../services/gotService';\n\n\nexport default class PostListItem extends React.Component {\n  constructor() {\n    super();\n    this.updateTask();\n  }\n  gotService = new gotService();\n  state = {\n    userId: null,\n    id: null,\n    title: null,\n    completed: false\n  }\n  updateTask() {\n    const id = Math.floor(Math.random()*10 + 1);\n    this.gotService.getTask(id)\n      .then((task) => {\n        this.setState({\n          userId: task.userId,\n          id: task.id,\n          title: task.title,\n          completed: task.completed\n        })\n      });\n  }\n  render () {\n    const {userId, id, title, completed} = this.state;\n    const {onDelete, onToggleCompleted} = this.props;\n    let classNames = 'app-list-item d-flex justify-content-between';\n      if (completed) {\n        classNames += ' important';\n      }  \n        return (\n          <div className={classNames}>\n              <button \n                type=\"button\" \n                className=\"btn-star btn-sm\"\n                onClick={onToggleCompleted}>  \n                <i className=\"fa fa-star\"></i>\n              </button>\n            <span className=\"app-list-item-label\">\n                  {title}</span>\n            <div className=\"d-flex justify-content-center align-items-center\">\n              <button \n                type=\"button\" \n                className=\"btn-trash btn-sm\"\n                onClick={onDelete}>\n                <i className=\"fa fa-trash-o\"></i>\n              </button>\n              \n            </div>\n          </div>\n        )\n  }\n}\n    \n\n\n","import PostList from './post-list';\nexport default PostList;","import React from 'react';\nimport PostListItem from '../post-list-item/';\nimport './post-list.css';\nimport {ListGroup} from 'reactstrap';\n\nconst PostList = ({posts, onDelete, onToggleCompleted}) => {\n\n  const elements = posts.map((item) => {\n    const {id, ...itemProps} = item;\n\n    return (\n      <li key={id} className='list-group-item'>\n        <PostListItem \n          {...itemProps}\n          onDelete={()=> onDelete(id)}\n          onToggleCompleted={() => onToggleCompleted(id)}\n          />\n      </li>\n    )\n  });\n\n  return (\n    <ListGroup className=\"app-list\">\n      {elements}\n    </ListGroup>\n  )\n}\n\nexport default PostList;","import PostAddForm from './post-add-form';\nexport default PostAddForm;","import React from 'react';\nimport './post-add-form.css';\n\nexport default  class PostAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    };\n    this.onValuechange = this.onValuechange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onValuechange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onAdd(this.state.text);\n    this.setState({\n      text: ''\n    });\n  }\n  render() {\n    return (\n      <form \n          className=\"bottom-panel d-flex\"\n          onSubmit={this.onSubmit}>\n        <input className=\"form-control new-post-label\" \n          type=\"text\" \n          placeholder=\"Мне нужно сделать...\"\n          onChange= {this.onValuechange}\n          value={this.state.text}/>\n        <button \n          type=\"submit\" \n          className=\"btn btn-outline-secondary\"\n          >\n          Получить задание</button>\n      </form>\n    )\n  }\n}\n\n","import React from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel/';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form/';\n\nimport './app.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      term: '',\n      filter: 'all'\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleCompleted = this.onToggleCompleted.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.onFilterSelect = this.onFilterSelect.bind(this);\n    this.maxId = 4;\n  }\n\n  deleteItem(id) {\n    this.setState(({data}) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n      const newArr = [...before, ...after];\n\n      return {\n        data: newArr\n      }\n    });\n  }\n\n  addItem(body) {\n    const newItem = {\n      title: body,\n      completed: false,\n      id: this.maxId++\n    }\n    this.setState(({data}) => {\n      const newArr = [...data, newItem];\n      return{\n        data: newArr\n      }\n    })\n  }\n  onToggleCompleted(id) {\n    this.setState(({data}) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = {...old, completed: !old.completed};\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return{\n        data: newArr\n      }\n    });\n  }\n  searchPost(items, term) {\n    if (term ||term.length === 0) {\n      return items\n    }\n      return items.filter( (item) => {\n        return item.lable.indexOf(term) > -1\n      });\n  }\n  filterPosts(items, filter) {\n    if (filter === 'completed') {\n      return items.filter(item => item.completed)\n    } else {\n      return items\n    }\n  }\n  onUpdateSearch(term) {\n    this.setState({term})\n  }\n  onFilterSelect(filter) {\n    this.setState({filter})\n  }\n  \n  render() {\n    const {data, term, filter} = this.state;\n    const done = data.filter((item) => item.completed).length;\n    const allPosts = data.length;\n\n    const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\n    return (\n      <div className=\"app\">\n        <AppHeader\n          done={done}\n          allPosts={allPosts}/>\n        <div className=\"search-panel d-flex\">\n          <SearchPanel\n            onUpdateSearch={this.onUpdateSearch}/>\n          <PostStatusFilter\n            filter={filter}\n            onFilterSelect={this.onFilterSelect}/>\n        </div>\n        <PostList \n          posts={visiblePosts}\n          onDelete={this.deleteItem}\n          onToggleCompleted={this.onToggleCompleted}\n          />\n        <PostAddForm\n          onAdd={this.addItem}/>\n      </div>\n    )\n  }\n\n} \n\n\n\n\n\n  \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}